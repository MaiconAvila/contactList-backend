// <auto-generated />
using System;
using ContactList.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactList.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("ContactList.Models.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ContactList.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContactsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailText")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactsId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("ContactList.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContactsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactsId");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("ContactList.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ContactList.Models.Whatsapp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContactsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhatsappText")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactsId");

                    b.ToTable("Whatsapp");
                });

            modelBuilder.Entity("ContactList.Models.Contacts", b =>
                {
                    b.HasOne("ContactList.Models.User", null)
                        .WithMany("Contacts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ContactList.Models.Email", b =>
                {
                    b.HasOne("ContactList.Models.Contacts", null)
                        .WithMany("Email")
                        .HasForeignKey("ContactsId");
                });

            modelBuilder.Entity("ContactList.Models.Phone", b =>
                {
                    b.HasOne("ContactList.Models.Contacts", null)
                        .WithMany("Phone")
                        .HasForeignKey("ContactsId");
                });

            modelBuilder.Entity("ContactList.Models.Whatsapp", b =>
                {
                    b.HasOne("ContactList.Models.Contacts", null)
                        .WithMany("Whatsapp")
                        .HasForeignKey("ContactsId");
                });

            modelBuilder.Entity("ContactList.Models.Contacts", b =>
                {
                    b.Navigation("Email");

                    b.Navigation("Phone");

                    b.Navigation("Whatsapp");
                });

            modelBuilder.Entity("ContactList.Models.User", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
